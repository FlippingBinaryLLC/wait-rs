name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 5 * * 2"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  test:
    name: cargo test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
          - os: ubuntu-latest
            target: armv5te-unknown-linux-gnueabi
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        if: matrix.target == ''
      - name: Install Rust for cross-compiling
        uses: dtolnay/rust-toolchain@nightly
        with:
          target: ${{ matrix.target }}
        if: matrix.target != ''
      - run: cargo test --all-features $DOCTEST_XCOMPILE

  build:
    name: cargo +${{ matrix.rust }} build
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo build --tests

  clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - run: cargo clippy --all-features --all-targets

  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  docs:
    name: cargo doc
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      - run: cargo doc --all-features
        env:
          RUSTDOCFLAGS: --D warnings --cfg docsrs
